1. Dependency Injection (DI): 의존성 주입
개념
DI는 객체 간의 의존성을 외부에서 주입해주는 패턴입니다. 일반적으로 객체는 다른 객체의 메서드나 데이터를 사용하기 위해 그 객체에 의존하게 됩니다. 
하지만 DI를 통해서 직접 객체를 생성하는 대신 Spring 컨테이너가 객체 간의 의존성을 관리하고 주입해줍니다.

예시
전통적인 방식에서는 new 키워드를 사용해서 객체를 직접 생성합니다.

java
코드 복사
public class Main {
    public static void main(String[] args) {
        UserService userService = new UserService();
        userService.addUser(new User(1, "Alice", "alice@example.com"));
    }
}

DI에서는 이 작업을 Spring 컨테이너가 대신 해줍니다. 예를 들어, Spring에서는 @Autowired를 사용하여 의존성을 주입할 수 있습니다.

java
코드 복사
@Service
public class UserService {
    @Autowired
    private EmailService emailService;  // 의존성 자동 주입
    // 기타 코드...
}