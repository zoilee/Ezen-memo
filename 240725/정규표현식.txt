정규표현식
(Regular Expresession)


정규식을 만드는 방법


1. 리터럴 방식

	const regex = /abc/;

2. 생성자 방식

	const regex = new RegExp("abc";
	const regex = new RegExp(/abc/);


정규 표현식 플래그

/패턴/플래그
1. g(global) = 전역 검색 (일치하는 모든 패턴을 찾음)
	ex) /abc/g;

2. I(ignore case)  = 대소문자 구분하지 않고 검색
	ex)

3. m(multiline) = 여러 줄 모드로 검색

4. s(dotAll) 점(.)이 줄바꿈ㅇ르 포함한 모든 문자

5. u(Unicode)

6. y(sticky)


그룹관련

| : 또는
() : 그룹
[] : 괄호안에 있는 문자가 오는지 검색
[^문자] : 문자를 제외한 모든 것
(?:문자) : 찾지만 그룹으로 만들지는 않음


AND / OR

? : zero or one (없거나 하나 있거나)
* : zero or more (없거나 있거나)
+ : one or more (하나 있거나 많거나)
{n} : n 번 반복
{min, } : 최소 보다 같거나 많게
{min, max} : 최소 에서 최대 많금에 속할 때


경계

\b - 단어 경계
\B - 단어 경계가 아님
^ - 문장의 시작
$ - 문장의 끝


단어검색
. : 어떤 글자 (모든글자)
\d : 숫자 (digit)
\D : 숫자가 아닌것만
\w : 문자만 검색 (word)
\W : 문자가 아닌것만
\s : 공백
\S : 공백이 아닌것


 





